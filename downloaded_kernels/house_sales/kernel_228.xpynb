{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "8b1344c6-4242-c30e-8a5d-61c1c38b1605"
      },
      "outputs": [],
      "source": [
        "# This Python 3 environment comes with many helpful analytics libraries installed\n",
        "# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n",
        "# For example, here's several helpful packages to load in \n",
        "\n",
        "import numpy as np # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
        "import matplotlib.pyplot as plt \n",
        "import seaborn as sns\n",
        "import tensorflow as tf\n",
        "import time \n",
        "# Input data files are available in the \"../input/\" directory.\n",
        "# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n",
        "\n",
        "from subprocess import check_output\n",
        "print(check_output([\"ls\", \"../input\"]).decode(\"utf8\"))\n",
        "\n",
        "# Any results you write to the current directory are saved as output."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "8d6d35d5-c940-0944-0154-50bfbd6c0f20"
      },
      "outputs": [],
      "source": [
        "data_df = pd.read_csv(r'../input/kc_house_data.csv')\n",
        "data_df.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "897ee698-9a19-dac0-b5c9-d813b0ec9ede"
      },
      "outputs": [],
      "source": [
        "data_df.columns"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "1ce99632-4426-dc21-ac11-e280272c2d22"
      },
      "outputs": [],
      "source": [
        "x = data_df.sqft_living\n",
        "y = data_df.price\n",
        "plt.plot(x, y, 'b,')\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "460d2607-ed2b-9aad-64b4-28cfd9672820"
      },
      "outputs": [],
      "source": [
        "import psutil\n",
        "psutil.virtual_memory()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "bef112e4-ad40-a057-43e5-44acbd453b8c"
      },
      "outputs": [],
      "source": [
        "st = time.time()\n",
        "a = np.arange(1000000)\n",
        "s = sum(a**2)\n",
        "print (\"sum: %d  - time: %.3f [sec]\"  %(s, time.time()-st))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "7de96992-af71-38f2-8ef9-d7ca85075c6c"
      },
      "outputs": [],
      "source": [
        "st = time.time()\n",
        "a = np.arange(10**8)\n",
        "s = max(a**2)\n",
        "print (\"sum: %d  - time: %.3f [sec]\"  %(s, time.time()-st))"
      ]
    }
  ],
  "metadata": {
    "_change_revision": 0,
    "_is_fork": false,
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}