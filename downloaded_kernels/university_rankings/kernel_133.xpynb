{
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0,
  "cells": [
    {
      "metadata": {
        "_cell_guid": "139a15c4-b6f5-be80-6a67-73f47eb72f3c",
        "_active": false,
        "collapsed": false
      },
      "source": "# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load in \n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# numpy, matplotlib, seaborn\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.set_style('whitegrid')\n%matplotlib inline\n\n# Input data files are available in the \"../input/\" directory.\n# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory\n\nfrom subprocess import check_output\nprint(check_output([\"ls\", \"../input\"]).decode(\"utf8\"))\n\n# Any results you write to the current directory are saved as output.",
      "execution_count": 1,
      "cell_type": "code",
      "outputs": [],
      "execution_state": "idle"
    },
    {
      "metadata": {
        "_cell_guid": "f39807eb-4c2a-aaf2-7031-53aa089780d7",
        "_active": false,
        "collapsed": false
      },
      "source": "\ndf = pd.read_csv('../input/cwurData.csv')\ndf.head()",
      "execution_count": 2,
      "cell_type": "code",
      "outputs": [],
      "execution_state": "idle"
    },
    {
      "metadata": {
        "_cell_guid": "d269572e-51f3-6b78-a9c0-56adb329af71",
        "_active": false,
        "collapsed": false
      },
      "source": "def return_quality(c):\n    return df[df.country == c].quality_of_education.tolist()\n\nus_quality = return_quality('USA')\n\ndf_c = df.loc[(df.country == \"USA\") | (df.country == \"United Kingdom\"), ['world_rank', 'country', 'quality_of_education']]\nprint(df_c['quality_of_education'].max())\n\nfacet = sns.FacetGrid(df_c, hue=\"country\",aspect=2)\nfacet.map(sns.kdeplot,'quality_of_education',shade= True)\nfacet.set(xlim=(0, df_c['quality_of_education'].max()))\nfacet.add_legend()\n\n\n",
      "execution_count": 3,
      "cell_type": "code",
      "outputs": [],
      "execution_state": "idle"
    },
    {
      "metadata": {
        "_cell_guid": "ad89f9b2-0d99-2e00-6294-e38d4e48987e",
        "_active": false,
        "collapsed": false
      },
      "source": "fig, (axis1,axis2) = plt.subplots(1,2,figsize=(15,4))\naxis1.set_title('Quality Dist')\ndf['quality_of_education'].dropna().astype(int).hist(bins=70, ax=axis1)\n",
      "execution_count": 4,
      "cell_type": "code",
      "outputs": [],
      "execution_state": "idle"
    },
    {
      "metadata": {
        "_cell_guid": "49223006-1975-34d8-6243-02c1705c2cf7",
        "_active": false,
        "collapsed": false
      },
      "source": "grouped = df.groupby('country').mean()\ngrouped.head()",
      "execution_count": 5,
      "cell_type": "code",
      "outputs": [],
      "execution_state": "idle"
    },
    {
      "metadata": {
        "_cell_guid": "0ae269e6-cd71-6b00-719c-e5960eb09bf8",
        "_active": false,
        "collapsed": false
      },
      "source": null,
      "execution_count": null,
      "cell_type": "code",
      "outputs": []
    }
  ]
}