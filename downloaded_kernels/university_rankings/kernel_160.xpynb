{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "0a3815a9-24e4-41cb-9657-fc5a5d0584ab"
      },
      "outputs": [],
      "source": [
        "######### INSTRUCTIONS #########\n",
        "#\n",
        "# Fork this script and change the university name to see what rank it gets:\n",
        "#\n",
        "my_university_name = [\"University of Waterloo\"]\n",
        "#\n",
        "# Look at the log for a full list of universities you can choose from.\n",
        "#\n",
        "# If your university is listed under multiple names, you can combine as many names as you want like this:\n",
        "# my_university_name = [\"The Johns Hopkins University\", \"Johns Hopkins University\"]\n",
        "#\n",
        "################################\n",
        "\n",
        "# Import Packages\n",
        "import numpy as np # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "sns.set(style=\"ticks\", color_codes=True)\n",
        "plt.rcParams['figure.figsize'] = 16, 12\n",
        "\n",
        "# Import Data\n",
        "\n",
        "timesData = pd.read_csv(\"../input/timesData.csv\")\n",
        "shanghaiData = pd.read_csv(\"../input/shanghaiData.csv\")\n",
        "cwurData = pd.read_csv(\"../input/cwurData.csv\")\n",
        "\n",
        "# Print off a list of universities\n",
        "\n",
        "all_university_names = set(timesData.university_name).union(set(shanghaiData.university_name)).union(set(cwurData.institution))\n",
        "all_university_names_list = [str(i) for i in (list(all_university_names))]\n",
        "\n",
        "print(\"List of All Universities in Dataset\")\n",
        "print(\"-----------------------------------\")\n",
        "print ('\\n'.join([ str(university) for university in sorted(all_university_names_list) ]))\n",
        "\n",
        "\n",
        "times_plot_data = timesData[timesData.university_name.isin(my_university_name)][['world_rank','year']]\n",
        "shanghai_plot_data = shanghaiData[shanghaiData.university_name.isin(my_university_name)][['world_rank','year']]\n",
        "cwur_plot_data = cwurData[cwurData.institution.isin(my_university_name)][['world_rank','year']]\n",
        "\n",
        "times_plot_data['source'] = 'Times'\n",
        "shanghai_plot_data['source'] = 'Shanghai'\n",
        "cwur_plot_data['source'] = 'CWUR'\n",
        "\n",
        "# parse the first number in rank for data ranges\n",
        "times_plot_data['world_rank'] = times_plot_data['world_rank'].str.split('-').str[0]\n",
        "shanghai_plot_data['world_rank'] = shanghai_plot_data['world_rank'].str.split('-').str[0]\n",
        "\n",
        "plot_data = times_plot_data.append(shanghai_plot_data).append(cwur_plot_data)\n",
        "plot_data['world_rank'] = plot_data['world_rank'].astype(int)\n",
        "ax = sns.pointplot(x='year',y='world_rank',hue='source',data=plot_data);\n",
        "\n",
        "# Styling\n",
        "\n",
        "plt.title(my_university_name[0] + \" Ranking\", fontsize=26)\n",
        "plt.xticks(fontsize=20)\n",
        "plt.yticks(fontsize=20)    \n",
        "plt.ylabel(\"World Rank\", fontsize=26)  \n",
        "plt.xlabel(\"Year\", fontsize=26) \n",
        "plt.tight_layout()\n",
        "plt.legend(loc='upper left',fontsize=20)\n",
        "ax.spines[\"top\"].set_visible(False)    \n",
        "ax.spines[\"right\"].set_visible(False)    \n",
        "ax.get_xaxis().tick_bottom()    \n",
        "ax.get_yaxis().tick_left()\n",
        "\n",
        "# Save File\n",
        "plt.savefig('university.png')"
      ]
    }
  ],
  "metadata": {
    "_change_revision": 0,
    "_is_fork": false,
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.5.2"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}