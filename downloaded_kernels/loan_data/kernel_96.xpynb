{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "814a56ef-045a-6955-fdb9-a411b4e7b67e"
      },
      "source": [
        "# The Lending Club: Loan default prediction\n",
        "\n",
        "*MLND Capstone Project Notebook*"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "816de8a9-a1be-3f6f-94d6-6dd4b3137492"
      },
      "source": [
        "**II. Analysis**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "2fadcafa-14df-2106-c303-c66a41826102"
      },
      "source": [
        "*Data Exploration*\n",
        "\n",
        "In this section, you will be expected to analyze the data you are using for the problem. This data can either be in the form of a dataset (or datasets), input data (or input files), or even an environment. The type of data should be thoroughly described and, if possible, have basic statistics and information presented (such as discussion of input features or defining characteristics about the input or environment). Any abnormalities or interesting qualities about the data that may need to be addressed have been identified (such as features that need to be transformed or the possibility of outliers). Questions to ask yourself when writing this section:\n",
        "- _If a dataset is present for this problem, have you thoroughly discussed certain features about the dataset? Has a data sample been provided to the reader?_\n",
        "- _If a dataset is present for this problem, are statistics about the dataset calculated and reported? Have any relevant results from this calculation been discussed?_\n",
        "- _If a dataset is **not** present for this problem, has discussion been made about the input space or input data for your problem?_\n",
        "- _Are there any abnormalities or characteristics about the input space or dataset that need to be addressed? (categorical variables, missing values, outliers, etc.)_\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "73b8ee73-4caa-14b4-fe2f-ca2444153613"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import sqlite3\n",
        "import seaborn as sns\n",
        "from sklearn import tree\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "4ebc2ab2-96bd-0389-4487-d08179ca702d"
      },
      "outputs": [],
      "source": [
        "df = pd.read_csv('../input/loan.csv', na_values=['NA'], nrows=10000)\n",
        "#df = pd.read_csv('../input/loan.csv', na_values=['NA'])\n",
        "\n",
        "print (df.columns)\n",
        "print (df.describe())\n",
        "print (df['loan_status'].unique())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "acf15407-c623-a16d-bf4c-d9d1a723ea79"
      },
      "outputs": [],
      "source": [
        "# How many null descriptions\n",
        "print (\"How many null descriptions? {}\".format(len(df[df['desc'].isnull()])))\n",
        "\n",
        "# Average length of non null descriptions\n",
        "print (\"Average length of Description Text {}\".format(df['desc'].dropna().str.len().mean()))\n",
        "\n",
        "sns.distplot(df['desc'].dropna().str.len())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "104f4ffa-e7f4-3b3f-32b3-edbadd5c07e2"
      },
      "outputs": [],
      "source": [
        "data_dictionary = pd.read_excel('../input/LCDataDictionary.xlsx')\n",
        "\n",
        "print(data_dictionary.shape[0])\n",
        "print(data_dictionary.columns.tolist())\n",
        "\n",
        "data_dictionary.rename(columns={'LoanStatNew': 'name',\n",
        "                                'Description': 'description'})\n",
        "data_dictionary.head(10)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "2d4175ba-5f5f-0177-a452-52279687d799"
      },
      "outputs": [],
      "source": [
        "categorical_cols = ['grade', 'sub_grade', 'purpose', 'loan_status', 'home_ownership', 'emp_length', 'application_type']\n",
        "id_cols = ['id', 'member_id', '']\n",
        "time_cols = ['term', 'mths_since_last_record', 'issue_d', 'last_pymnt_d', 'next_pymnt_d']\n",
        "status_cols = ['loan_status', 'verification_status', 'initial_list_status']\n",
        "location_cols = ['zip_code', 'addr_state']\n",
        "numerical_cols = ['loan_amnt', 'funded_amnt', 'funded_amnt_inv', 'int_rate', \\\n",
        "                  'total_pymnt', 'annual_inc', 'installment', 'open_acc', 'dti', 'emp_length' , 'out_prncp']\n",
        "desc_cols = ['url', 'desc', 'title']\n",
        "\n",
        "print(df[categorical_cols].head(30))\n",
        "print(df[time_cols].head(30))\n",
        "print(df[numerical_cols].head(30))\n",
        "print(df[location_cols].head(30))\n",
        "print(df[time_cols].head(30))\n",
        "print(df[desc_cols].head(30))"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "bc11e9bc-27f5-2739-387a-4c4166efc0f6"
      },
      "outputs": [],
      "source": [
        "# Code here\n",
        "half_count = len(df) / 2\n",
        "df_loans = df.dropna(thresh=half_count, axis=1) # Drop any column with more than 50% missing values\n",
        "df_loans = df_loans.drop(['url','title'], axis=1)      # These columns are not useful for our purpose\n",
        "df_loans.info()\n",
        "\n",
        "status_meaning = [\n",
        "    \"Loan is up to date on all outstanding payments.\",\n",
        "    \"Loan has been fully repaid, either at the expiration of the 3- or 5-year year term or as a result of a prepayment.\",\n",
        "    \"Loan for which there is no longer a reasonable expectation of further payments. Generally, Charge Off occurs no later than 30 days after the Default status is reached.\",\n",
        "    \"Loan has not been current for 31 to 120 days. Learn more about the tools Lending Club has to deal with delinquent borrowers.\",\n",
        "    \"New loan that has passed all Lending Club reviews, received full funding, and has been issued.\",\n",
        "    \"Loan is past due but within the 15-day grace period.\",\n",
        "    'Loan has not been current for 16 to 30 days. Learn more about the tools Lending Club has to deal with delinquent borrowers.',\n",
        "    \"Does not meet the credit policy. Status:Fully ...\",\n",
        "    \"Loan has not been current for 121 days or more. Learn more about the difference between \u201cdefault\u201d and \u201ccharge off\u201d.\",\n",
        "    \"Does not meet the credit policy. Status:Charge...\"]\n",
        "\n",
        "status, count = df_loans[\"loan_status\"].value_counts().index, df_loans[\"loan_status\"].value_counts().values\n",
        "\n",
        "loan_statuses_explanation = pd.DataFrame({'Loan Status': status, 'Count': count, 'Meaning': status_meaning})[['Loan Status', 'Count', 'Meaning']]\n",
        "\n",
        "pd.set_option('display.max_colwidth', 255)\n",
        "\n",
        "loan_statuses_explanation"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "8fec5fa4-958f-dc5e-4a95-7f3b312720d6"
      },
      "source": [
        "*Exploratory Visualization*\n",
        "\n",
        "In this section, you will need to provide some form of visualization that summarizes or extracts a relevant characteristic or feature about the data. The visualization should adequately support the data being used. Discuss why this visualization was chosen and how it is relevant. Questions to ask yourself when writing this section:\n",
        "- _Have you visualized a relevant characteristic or feature about the dataset or input data?_\n",
        "- _Is the visualization thoroughly analyzed and discussed?_\n",
        "- _If a plot is provided, are the axes, title, and datum clearly defined?_\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "b3c655c8-635b-927b-9a02-01e677751d5b"
      },
      "outputs": [],
      "source": [
        "# Understand features correlations\n",
        "sns.pairplot(df[['loan_amnt', 'funded_amnt_inv', 'total_pymnt', \\\n",
        "                  'dti', 'loan_status']].dropna(), hue='loan_status')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "35762d8d-6325-de6d-69ba-6783df1e95d9"
      },
      "outputs": [],
      "source": [
        "# Loan status visualisation\n",
        "plt.xticks(rotation=90)\n",
        "plt.xlabel('Loan Status')\n",
        "\n",
        "df_status = df.loc[df['loan_status'].isin(['Current','Charged Off','Default','Fully Paid','In Grace Period','Late (16-30 days)','Late (31-120 days)'])]\n",
        "\n",
        "sns.countplot(df_status['loan_status'], palette='Set2')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "9facbb22-5be8-66cf-7df5-727783a46b54",
        "collapsed": true
      },
      "outputs": [],
      "source": [
        "df_loans.loc[df_loans['Loan Status'] == 'Late (31-120 days)', 'Loan Status'] = 'Late'\n",
        "df_loans.loc[df_loans['Loan Status'] == 'Late (1-30 days)', 'Loan Status'] = 'Late'\n",
        "\n",
        "df_loans['Loan Status'].unique()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "d62559d1-4eb4-8e21-6215-5c4ba632d1e5"
      },
      "outputs": [],
      "source": [
        "df['loan_status'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "37ae4b5a-6eed-8929-4628-2f643a708ce2"
      },
      "outputs": [],
      "source": [
        "sns.distplot(df['loan_amnt'])"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "13a9f0f0-28dc-c7c3-ea09-d70f85cfff10"
      },
      "outputs": [],
      "source": [
        "plt.xticks(rotation=90)\n",
        "sns.stripplot(data=df[['loan_status','int_rate', 'purpose']], x='loan_status', y='int_rate', jitter=True, hue='purpose')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "c0599899-fa6f-cc45-ae2c-221b19d3ba4e"
      },
      "outputs": [],
      "source": [
        "# loan status distribution\n",
        "plt.xticks(rotation=90)\n",
        "sns.violinplot(data=df[['loan_status','int_rate', 'purpose']], x='loan_status', y='int_rate')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "4c0259ee-b864-b463-1b6c-26d6bc690d1e"
      },
      "source": [
        "*Algorithms and Techniques*\n",
        "\n",
        "In this section, you will need to discuss the algorithms and techniques you intend to use for solving the problem. You should justify the use of each one based on the characteristics of the problem and the problem domain. Questions to ask yourself when writing this section:\n",
        "- _Are the algorithms you will use, including any default variables/parameters in the project clearly defined?_\n",
        "- _Are the techniques to be used thoroughly discussed and justified?_\n",
        "- _Is it made clear how the input data or datasets will be handled by the algorithms and techniques chosen?_\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "f91e2dc4-827f-b559-32e2-ad90ff47c333",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "cb133cfe-edbf-d11e-52d2-682b912a1cf4"
      },
      "source": [
        "*Benchmark*\n",
        "\n",
        "In this section, you will need to provide a clearly defined benchmark result or threshold for comparing across performances obtained by your solution. The reasoning behind the benchmark (in the case where it is not an established result) should be discussed. Questions to ask yourself when writing this section:\n",
        "- _Has some result or value been provided that acts as a benchmark for measuring performance?_\n",
        "- _Is it clear how this result or value was obtained (whether by data or by hypothesis)?_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "d6ff2ba7-9cfc-cd3d-23bb-298b1192e67d",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "50cd2f8a-f002-a3f9-4ee5-a1fbc5936b03"
      },
      "source": [
        "**III. Methodology**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "490357f7-26df-e0ca-34d1-40fcef3e9e14"
      },
      "source": [
        "*Data Preprocessing*\n",
        "\n",
        "In this section, all of your preprocessing steps will need to be clearly documented, if any were necessary. From the previous section, any of the abnormalities or characteristics that you identified about the dataset will be addressed and corrected here. Questions to ask yourself when writing this section:\n",
        "- _If the algorithms chosen require preprocessing steps like feature selection or feature transformations, have they been properly documented?_\n",
        "- _Based on the **Data Exploration** section, if there were abnormalities or characteristics that needed to be addressed, have they been properly corrected?_\n",
        "- _If no preprocessing is needed, has it been made clear why?_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "59f19d9e-1fb8-b8f1-6fd3-d261b1515e51",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "6d481690-94b0-fc27-f3b5-73d62bc7c575"
      },
      "source": [
        "*Implementation*\n",
        "\n",
        "In this section, the process for which metrics, algorithms, and techniques that you implemented for the given data will need to be clearly documented. It should be abundantly clear how the implementation was carried out, and discussion should be made regarding any complications that occurred during this process. Questions to ask yourself when writing this section:\n",
        "- _Is it made clear how the algorithms and techniques were implemented with the given datasets or input data?_\n",
        "- _Were there any complications with the original metrics or techniques that required changing prior to acquiring a solution?_\n",
        "- _Was there any part of the coding process (e.g., writing complicated functions) that should be documented?_\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "023a8436-7376-5888-ffe4-d935cfc8261c",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "428dccdc-115e-88ce-4076-f6935db9b340"
      },
      "source": [
        "*Refinement*\n",
        "\n",
        "In this section, you will need to discuss the process of improvement you made upon the algorithms and techniques you used in your implementation. For example, adjusting parameters for certain models to acquire improved solutions would fall under the refinement category. Your initial and final solutions should be reported, as well as any significant intermediate results as necessary. Questions to ask yourself when writing this section:\n",
        "- _Has an initial solution been found and clearly reported?_\n",
        "- _Is the process of improvement clearly documented, such as what techniques were used?_\n",
        "- _Are intermediate and final solutions clearly reported as the process is improved?_\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "40f22aae-7077-2f2e-a9c5-d9ab0ccb842b",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "62fb8d29-a482-7cca-4729-2ac1623ddb53"
      },
      "source": [
        "** IV. Results **"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "bd0a43a3-1a6b-f50f-983e-1c0dd06f090a"
      },
      "source": [
        "*Model Evaluation and Validation*\n",
        "\n",
        "In this section, the final model and any supporting qualities should be evaluated in detail. It should be clear how the final model was derived and why this model was chosen. In addition, some type of analysis should be used to validate the robustness of this model and its solution, such as manipulating the input data or environment to see how the model\u2019s solution is affected (this is called sensitivity analysis). Questions to ask yourself when writing this section:\n",
        "- _Is the final model reasonable and aligning with solution expectations? Are the final parameters of the model appropriate?_\n",
        "- _Has the final model been tested with various inputs to evaluate whether the model generalizes well to unseen data?_\n",
        "- _Is the model robust enough for the problem? Do small perturbations (changes) in training data or the input space greatly affect the results?_\n",
        "- _Can results found from the model be trusted?_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "cfd34db5-6eee-590e-efd3-943e0fc1741d",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "6ed79503-dd1b-fec0-f45d-ff1dc04614e3"
      },
      "source": [
        "*Justification*\n",
        "\n",
        "In this section, your model\u2019s final solution and its results should be compared to the benchmark you established earlier in the project using some type of statistical analysis. You should also justify whether these results and the solution are significant enough to have solved the problem posed in the project. Questions to ask yourself when writing this section:\n",
        "- _Are the final results found stronger than the benchmark result reported earlier?_\n",
        "- _Have you thoroughly analyzed and discussed the final solution?_\n",
        "- _Is the final solution significant enough to have solved the problem?_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "0d9bdeaa-3daf-1f51-71a7-d0eaeec7ebb5",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "_cell_guid": "556bd7f3-5b4d-7033-dbcb-c0fab7338fe2"
      },
      "source": [
        "**V. Conclusion**\n",
        "\n",
        "Free-Form Visualization\n",
        "In this section, you will need to provide some form of visualization that emphasizes an important quality about the project. It is much more free-form, but should reasonably support a significant result or characteristic about the problem that you want to discuss. Questions to ask yourself when writing this section:\n",
        "- _Have you visualized a relevant or important quality about the problem, dataset, input data, or results?_\n",
        "- _Is the visualization thoroughly analyzed and discussed?_\n",
        "- _If a plot is provided, are the axes, title, and datum clearly defined?_"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "_cell_guid": "ce412b2f-9bfd-16c9-6c6d-699fad0125fa",
        "collapsed": true
      },
      "outputs": [],
      "source": ""
    }
  ],
  "metadata": {
    "_change_revision": 0,
    "_is_fork": false,
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.6.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}